// Generated by CoffeeScript 1.10.0
var Pixel, PixelUtil, bmp, gif, jpg, png,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

PixelUtil = (require('pixel-util')).PixelUtil;

gif = require('pixel-gif');

jpg = require('pixel-jpg');

png = require('pixel-png');

bmp = require('pixel-bmp');

Pixel = (function(superClass) {
  extend(Pixel, superClass);

  function Pixel() {
    return Pixel.__super__.constructor.apply(this, arguments);
  }

  Pixel.prototype.parse = function(file) {
    return this.detect(file).then(function(types) {
      switch (types.ext) {
        case 'gif':
          return gif.parse(file);
        case 'png':
          return png.parse(file);
        case 'jpg':
          return jpg.parse(file);
        case 'bmp':
          return bmp.parse(file);
        default:
          return this.Promise.reject(types.ext + ' is Unsupported type.');
      }
    });
  };

  return Pixel;

})(PixelUtil);

module.exports = new Pixel;

module.exports.Pixel = Pixel;
